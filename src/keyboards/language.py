# src/keyboards/language.py


from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup


def get_books_keyboard(books: list[dict]) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–Ω–∏–≥–∏"""
    buttons = []

    for book in books[:10]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10
        level_emoji = {
            "A1": "üü¢",
            "A2": "üü¢",
            "B1": "üü°",
            "B2": "üü°",
            "C1": "üî¥",
            "C2": "üî¥",
        }.get(book.get("level", ""), "üìò")

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –±–µ–∑ –∞–≤—Ç–æ—Ä–∞ (–∞–≤—Ç–æ—Ä –±—É–¥–µ—Ç –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞)
        title = book["title"]

        # –ï—Å–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ - —É–º–Ω–æ —Å–æ–∫—Ä–∞—â–∞–µ–º
        max_length = 40  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –¥–ª—è –∫–Ω–æ–ø–∫–∏
        if len(title) > max_length:
            # –ü—ã—Ç–∞–µ–º—Å—è –æ–±—Ä–µ–∑–∞—Ç—å –ø–æ —Å–ª–æ–≤–∞–º
            words = title.split()
            shortened = ""
            for word in words:
                if len(shortened + word) + 3 <= max_length:  # +3 –¥–ª—è "..."
                    shortened += word + " "
                else:
                    break
            title = shortened.strip() + "..."

        button_text = f"{level_emoji} {title}"
        buttons.append([InlineKeyboardButton(text=button_text, callback_data=f"book:{book['id']}")])

    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_reading_keyboard() -> InlineKeyboardMarkup:
    """–û—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —á—Ç–µ–Ω–∏—è"""
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üìö –í—ã–±—Ä–∞—Ç—å –∫–Ω–∏–≥—É", callback_data="choose_book")],
            [InlineKeyboardButton(text="üìä –ü—Ä–æ–≥—Ä–µ—Å—Å", callback_data="reading_progress")],
        ]
    )


def get_reading_actions_keyboard(show_back: bool = False) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–µ–π—Å—Ç–≤–∏–π –ø–æ—Å–ª–µ —á—Ç–µ–Ω–∏—è —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞"""
    buttons = []

    # –ü–µ—Ä–≤—ã–π —Ä—è–¥ - –ù–∞–∑–∞–¥ –∏ –î–∞–ª–µ–µ (–µ—Å–ª–∏ –µ—Å—Ç—å –Ω–∞–∑–∞–¥)
    if show_back:
        buttons.append(
            [
                InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="read:back"),
                InlineKeyboardButton(text="–î–∞–ª–µ–µ ‚ñ∂Ô∏è", callback_data="read:continue"),
            ]
        )
    else:
        buttons.append([InlineKeyboardButton(text="‚ñ∂Ô∏è –ß–∏—Ç–∞—Ç—å –¥–∞–ª—å—à–µ", callback_data="read:continue")])

    # –í—Ç–æ—Ä–æ–π —Ä—è–¥ - –ü—Ä–æ–≥—Ä–µ—Å—Å –∏ –°–º–µ–Ω–∏—Ç—å –∫–Ω–∏–≥—É
    buttons.append(
        [
            InlineKeyboardButton(text="üìä –ü—Ä–æ–≥—Ä–µ—Å—Å", callback_data="read:progress"),
            InlineKeyboardButton(text="üìö –°–º–µ–Ω–∏—Ç—å –∫–Ω–∏–≥—É", callback_data="choose_book"),
        ]
    )

    return InlineKeyboardMarkup(inline_keyboard=buttons)
