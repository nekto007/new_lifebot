import sys
from pathlib import Path

from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message
from aiogram.utils.keyboard import InlineKeyboardBuilder
from sqlalchemy import select

sys.path.insert(0, str(Path(__file__).parent.parent))

from config import logger
from db import Habits, SessionLocal, Task

router = Router()


@router.message(Command("stats"))
async def cmd_stats(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ /stats - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É."""
    user_id = message.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö
    async with SessionLocal() as session:
        habits_result = await session.execute(select(Habits).where(Habits.user_id == user_id))
        habits = habits_result.scalars().all()

        tasks_result = await session.execute(select(Task).where(Task.user_id == user_id))
        tasks = tasks_result.scalars().all()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—É—Å—Ç–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    if not habits and not tasks:
        await message.answer("–ü–æ–∫–∞ –º–∞–ª–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ ‚Äî –≤–µ—Ä–Ω—É—Å—å –∫ —Ç–µ–±–µ —á–µ—Ä–µ–∑ –ø–∞—Ä—É –¥–Ω–µ–π üìä")
        logger.info(f"User {user_id} viewed /stats - no data yet")
        return

    builder = InlineKeyboardBuilder()
    builder.button(text="–î–µ–Ω—å", callback_data="stats_period_day")
    builder.button(text="–ù–µ–¥–µ–ª—è", callback_data="stats_period_week")
    builder.button(text="–ú–µ—Å—è—Ü", callback_data="stats_period_month")
    builder.adjust(3)

    stats_text = "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Å–µ–≥–æ–¥–Ω—è:\n\n"
    stats_text += f"–ü—Ä–∏–≤—ã—á–∫–∏: {len(habits)}\n"
    stats_text += f"–ó–∞–¥–∞—á–∏: {len(tasks)}\n\n"
    stats_text += "–î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏."

    await message.answer(stats_text, reply_markup=builder.as_markup())
    logger.info(f"User {user_id} viewed /stats - {len(habits)} habits, {len(tasks)} tasks")
