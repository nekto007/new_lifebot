version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: habit_tracker_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: habit_tracker
      POSTGRES_USER: habit_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-habit_password_change_me}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5432:5432"
    networks:
      - bot_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U habit_user -d habit_tracker"]
      interval: 10s
      timeout: 5s
      retries: 5

  bot:
    build: .
    container_name: habit_tracker_bot
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      # Опционально: монтируем логи
      - ./logs:/app/logs
    environment:
      # PostgreSQL connection
      - DATABASE_URL=postgresql+asyncpg://habit_user:${POSTGRES_PASSWORD:-habit_password_change_me}@postgres:5432/habit_tracker
      # Python unbuffered для логов в реальном времени
      - PYTHONUNBUFFERED=1
      # Language API URL (host.docker.internal для доступа к хосту из Docker)
      - LANGUAGE_API_URL=http://host.docker.internal:5001/api/telegram
    # Для Linux добавляем маппинг host.docker.internal
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bot_network

networks:
  bot_network:
    driver: bridge

volumes:
  postgres_data:
